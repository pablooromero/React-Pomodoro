{"version":3,"sources":["components/Button.js","context/SettingsContext.js","components/CountdownAnimation.js","components/SetPomodoro.js","App.js","index.js"],"names":["Button","title","activeClass","_callback","className","onClick","SettingsContext","createContext","SettingsContextProvider","props","useState","pomodoro","setPomodoro","executing","setExecuting","startAnimate","setStartAnimate","updateExecute","updatedSettings","setTimerTime","evaluate","active","work","short","long","Provider","value","startTimer","pauseTimer","children","remainingTime","minutes","Math","floor","seconds","SettingsBtn","setCurrentTimer","active_state","stopAimate","CountdownAnimation","key","timer","animate","useContext","isPlaying","duration","colors","strokeWidth","size","trailColor","onComplete","SetPomodoro","newTimer","setNewTimer","handleChange","input","target","name","parseInt","noValidate","onSubmit","e","preventDefault","type","onChange","App","useEffect","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccf368ce.chunk.js","sourcesContent":["\nconst Button = ({title,activeClass, _callback}) => {\n    return (\n        <button className={activeClass} onClick={_callback}>{title}</button>\n      )\n}\nexport default Button\n","import { useState, createContext } from \"react\";\n\nexport const SettingsContext = createContext();\n\nfunction SettingsContextProvider(props) {\n  const [pomodoro, setPomodoro] = useState(0);\n  const [executing, setExecuting] = useState({});\n  const [startAnimate, setStartAnimate] = useState(false);\n\n  function setCurrentTimer(active_state) {\n    updateExecute({\n      ...executing,\n      active: active_state,\n    });\n    setTimerTime(executing);\n  }\n\n  function startTimer() {\n    setStartAnimate(true);\n  }\n\n  function pauseTimer() {\n    setStartAnimate(false);\n  }\n\n  const children = ({ remainingTime }) => {\n    const minutes = Math.floor(remainingTime / 60);\n    const seconds = remainingTime % 60;\n\n    return `${minutes}:${seconds}`;\n  };\n\n  const SettingsBtn = () => {\n    setExecuting({});\n    setPomodoro(0);\n  };\n\n  const updateExecute = (updatedSettings) => {\n    setExecuting(updatedSettings);\n    setTimerTime(updatedSettings);\n  };\n\n  const setTimerTime = (evaluate) => {\n    switch (evaluate.active) {\n      case \"work\":\n        setPomodoro(evaluate.work);\n        break;\n      case \"short\":\n        setPomodoro(evaluate.short);\n        break;\n      case \"long\":\n        setPomodoro(evaluate.long);\n        break;\n      default:\n        setPomodoro(0);\n        break;\n    }\n  };\n\n  function stopAimate() {\n    setStartAnimate(false);\n  }\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        pomodoro,\n        executing,\n        updateExecute,\n        startAnimate,\n        startTimer,\n        pauseTimer,\n        children,\n        SettingsBtn,\n        setCurrentTimer,\n        stopAimate,\n      }}\n    >\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport default SettingsContextProvider;\n","import { useContext } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport { SettingsContext } from \"../context/SettingsContext\";\nconst CountdownAnimation = ({ key, timer, animate, children }) => {\n  const { stopAimate } = useContext(SettingsContext);\n\n  return (\n    <CountdownCircleTimer\n      key={key}\n      isPlaying={animate}\n      duration={timer * 60}\n      colors={[\n        [\"#790e43\", 0.33],\n        [\"#790e43\", 0.33],\n        [\"#790e43\", 0.33],\n      ]}\n      strokeWidth={6}\n      size={220}\n      trailColor=\"#1d222b\"\n      onComplete={() => {\n        stopAimate();\n      }}\n    >\n      {children}\n    </CountdownCircleTimer>\n  );\n};\n\nexport default CountdownAnimation;\n","import React, { useContext, useState } from \"react\";\nimport { SettingsContext } from \"../context/SettingsContext\";\n\nconst SetPomodoro = () => {\n  const [newTimer, setNewTimer] = useState({\n    work: 25.0,\n    short: 1.0,\n    long: 5.0,\n    active: \"work\",\n  });\n\n  const { updateExecute } = useContext(SettingsContext);\n\n  const handleChange = (input) => {\n    const { name, value } = input.target;\n    switch (name) {\n      case \"work\":\n        setNewTimer({\n          ...newTimer,\n          work: parseInt(value),\n        });\n        break;\n      case \"shortBreak\":\n        setNewTimer({\n          ...newTimer,\n          short: parseInt(value),\n        });\n        break;\n      case \"longBreak\":\n        setNewTimer({\n          ...newTimer,\n          long: parseInt(value),\n        });\n        break;\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateExecute(newTimer);\n  };\n  return (\n    <div className=\"form-container\">\n      <form noValidate onSubmit={handleSubmit}>\n        <div className=\"input-wrapper\">\n          <input\n            className=\"input\"\n            type=\"number\"\n            name=\"work\"\n            onChange={handleChange}\n            value={newTimer.work}\n          />\n          <input\n            className=\"input\"\n            type=\"number\"\n            name=\"shortBreak\"\n            onChange={handleChange}\n            value={newTimer.short}\n          />\n          <input\n            className=\"input\"\n            type=\"number\"\n            name=\"longBreak\"\n            onChange={handleChange}\n            value={newTimer.long}\n          />\n        </div>\n        <button type=\"submit\">Empezar</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SetPomodoro;\n","import React, { useEffect, useContext } from \"react\";\nimport Button from \"./components/Button\";\nimport CountdownAnimation from \"./components/CountdownAnimation\";\nimport SetPomodoro from \"./components/SetPomodoro\";\nimport { SettingsContext } from \"./context/SettingsContext\";\n\nconst App = () => {\n  const {\n    pomodoro,\n    executing,\n    startAnimate,\n    children,\n    startTimer,\n    pauseTimer,\n    updateExecute,\n    setCurrentTimer,\n    SettingsBtn,\n  } = useContext(SettingsContext);\n\n  useEffect(() => {\n    updateExecute(executing);\n  }, [executing, startAnimate]);\n\n  return (\n    <div className=\"container\">\n      <h1>Pomodoro</h1>\n      <small>Estudia de una mejor manera.</small>\n      {pomodoro !== 0 ? (\n        <>\n          <ul className=\"labels\">\n            <li>\n              <Button\n                title=\"Trabajar\"\n                activeClass={\n                  executing.active === \"work\" ? \"active-label\" : undefined\n                }\n                _callback={() => setCurrentTimer(\"work\")}\n              />\n            </li>\n            <li>\n              <Button\n                title=\"Corto\"\n                activeClass={\n                  executing.active === \"short\" ? \"active-label\" : undefined\n                }\n                _callback={() => setCurrentTimer(\"short\")}\n              />\n            </li>\n            <li>\n              <Button\n                title=\"Largo\"\n                activeClass={\n                  executing.active === \"long\" ? \"active-label\" : undefined\n                }\n                _callback={() => setCurrentTimer(\"long\")}\n              />\n            </li>\n          </ul>\n          <Button title=\"Configuración\" _callback={SettingsBtn} />\n          <div className=\"timer-container\">\n            <div className=\"time-wrapper\">\n              <CountdownAnimation\n                key={pomodoro}\n                timer={pomodoro}\n                animate={startAnimate}\n              >\n                {children}\n              </CountdownAnimation>\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              title=\"Comenzar\"\n              activeClass={!startAnimate ? \"active\" : undefined}\n              _callback={startTimer}\n            />\n            <Button\n              title=\"Pausa\"\n              activeClass={startAnimate ? \"active\" : undefined}\n              _callback={pauseTimer}\n            />\n          </div>\n        </>\n      ) : (\n        <SetPomodoro />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SettingsContextProvider from './context/SettingsContext';\n\nReactDOM.render(\n  <SettingsContextProvider>\n    <App />\n  </SettingsContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}